/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  8
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant";
    object      phaseProperties;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

type populationBalanceMultiphaseSystem;

phases (particles gas);

populationBalances ();

particles
{
    type          reactingPhaseModel;
    diameterModel constant;
    constantCoeffs
    {
        d               125e-6;
		storeA              on;
    }
	
    alphaMax        0.55;
    
	residualAlpha   1e-15;
}
gas
{
    type          reactingPhaseModel;
    diameterModel constant;
    constantCoeffs
    {
        d               1e-5;
    }

    alphaMin        0.45;
	
    residualAlpha   1e-5;
}

//populationBalanceCoeffs
//{
//    aggregates
//    {
//        continuousPhase gas;
//
//        coalescenceModels
//        (
//            DahnekeInterpolation{}
//        );
//
//        binaryBreakupModels
//        ();
//
//        breakupModels
//        ();
//
//        driftModels
//        (
//			phaseChange
//            {
//                pairs               ((particles and gas));
//                dmdtf               phaseTransfer:dmidtf;
//                specie              HF_s;
//                surfaceGrowthType   ParkRogak; //https://www.sciencedirect.com/science/article/abs/pii/S0021850204000941
//            }
//		);
//    }
//}

//massTransfer.gas
//(
//	(particles in gas)
//	type		Frossling;
//	Le			1.0;
//);

blending
{
    default
    {
        type            none;
        continuousPhase gas;
    }
}

surfaceTension
(
    (particles and gas)
    {
        type            constant;
        sigma           0;
    }
);

aspectRatio
();

drag
(
    (particles in gas)
    {
        type            GidaspowErgunWenYu;
        residualRe      1e-3;
        swarmCorrection
        {
            type        none;
        }
    }
);

virtualMass
(
    (particles in gas)
    {
        type            constantCoefficient;
        Cvm             0.5;
    }
);

heatTransfer
(
    (particles in gas)
    {
        type            RanzMarshall;
        residualAlpha   1e-3;
    }
);

phaseTransfer
(
	(particles in gas)
    {
        type myReactionDriven;
        reactingPhase gas;
        otherPhase particles;
	    //sign			5e12;
        species (HF_s);
    }
);

lift
();

wallLubrication
();

turbulentDispersion
();

interfaceCompression
();

// Minimum allowable pressure
pMin            10000;


// ************************************************************************* //
